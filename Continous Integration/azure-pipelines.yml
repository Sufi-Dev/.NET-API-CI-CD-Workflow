# Docker
# Build a Docker image 
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master
  
pool:
  vmImage: 'ubuntu-latest' 
  
resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

# A docker container will be used to build and test the app, which will then be uploaded to the Azure Container Registry (ACR)
stages:
- stage: Build
  displayName: Build image
  jobs:  
  - job: Build
    displayName: Build
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'Sufi ACR Private Registery'
        repository: 'Awesome-API'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: $(tag)

# Provision the Infrastructure with Terraform 
- stage: Provision
  displayName: 'Terraforming on Azure...'
  dependsOn: Build
  jobs:
  - job: Terraform
    displayName: 'Provisioning Infrastructure'
    variables: 
    - group: Teraform-Env-Vars
    steps:
    - bash: |
        set -e
        terraform init -input=false
        terraform apply -input=false -auto-approve
        terraform output -raw server_ip > inventory.txt
        SERVER_IP=`cat ./inventory.txt`
        echo variable value is $SERVER_IP
        echo "##vso[task.setvariable variable=webserver_address;isOutput=true]$SERVER_IP"
      name: 'RunTerraform'
      displayName: 'Run Terraform'
      workingDirectory: "$(System.DefaultWorkingDirectory)/Infrastructure\ as\ Code/terraform/"
      
      env:
        ARM_CLIENT_ID: $(ARM_CLIENT_ID)
        ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
        ARM_TENANT_ID: $(ARM_TENANT_ID)
        ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
        TF_VAR_ssh_key: $(TF_VAR_ssh_key)
  
# Configure the Web Server
- stage: Configure
  displayName: 'Run Ansible Playbook'
  dependsOn: Provision
  jobs:
  - job: Configure
    displayName: 'Run Ansible Playbook'
    variables:
      - name: SERVER_IP
        value: $[ stageDependencies.Provision.Terraform.outputs['RunTerraform.webserver_address'] ]
      - group: Ansible-Variable-Group
    steps:
    - task: DownloadSecureFile@1
      name: Key
      inputs:
        secureFile: 'azureuser.pem'
        retryCount: '1'
    - bash: |
        sudo chmod 400 $(Key.secureFilePath)
        ansible-playbook -i $(SERVER_IP), --private-key $(Key.secureFilePath) \
        playbook.yml -u adminuser --ssh-common-args='-o StrictHostKeyChecking=no'
      name: 'RunAnsible'
      displayName: 'Run Ansible'
      workingDirectory: "$(System.DefaultWorkingDirectory)/Configuration\ Management/ansible"
