# Docker
# Build a Docker image 
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

# A docker container will be used to build and test the app, which will then be uploaded to the Azure Container Registry (ACR)
stages:
- stage: Build
  displayName: Build image
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'Sufi ACR Private Registery'
        repository: 'Awesome-API'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: $(tag)

# Provision the Infrastructure with Terraform 
- stage: Provision
  displayName: 'Terraforming on Azure...'
  dependsOn: Build
  jobs:
  - job: Provision
    displayName: 'Provisioning Container Instance'
    pool:
      vmImage: 'ubuntu-latest'
    variables: 
    - group: TeraformEnvVars
    steps:
    - name: 'RunTerraform'
      displayName: 'Run Terraform'
      workingDirectory: '$(System.DefaultWorkingDirectory)/Infrastructure\ as\ Code/terraform/)'
      script: |
        set -e
        terraform init -input=false
        terraform apply -input=false -auto-approve
      env:
        ARM_CLIENT_ID: $(ARM_CLIENT_ID)
        ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
        ARM_TENANT_ID: $(ARM_TENANT_ID)
        ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
        TF_VAR_imagebuild: $(tag)
        TF_VAR_ssh_key: $(public_key)
        
        
